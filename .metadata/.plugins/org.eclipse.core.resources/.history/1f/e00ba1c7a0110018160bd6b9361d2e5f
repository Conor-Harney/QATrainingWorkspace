package mouseActionTester;

import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;

public class DroppablePage {
	//default functionality 
	@FindBy(css = "#draggableview")
	private WebElement m_defaultDragableView;
	
	@FindBy(css = "#droppableview > p")
	private WebElement m_defaultTargetOutput;
	
	public String clickAndHoldefaultDragableView(Actions mouseLst)
	{
		mouseLst.clickAndHold(m_defaultDragableView).perform();
		return "defaultDragableView held";
	}
	public String dragToDefaultTarget(Actions mouseLst)
	{
		mouseLst.moveToElement(m_defaultTargetOutput).perform();
		return "Mouse draaged to default target";
	}
	public String releaseMouse(Actions mouseLst)
	{
		mouseLst.release().perform();
		return "Action released";
	}
	public String getDefaultTargetText()
	{
		return m_defaultTargetOutput.getText().toString();
	}
	
	
	//accept functionality
	@FindBy(css = "#tabs > ul > li:nth-child(2)")
	private WebElement m_AcceptBtn;
	
	@FindBy(css = "#draggable-nonvalid")
	private WebElement m_DragableNotDropableView;
	
	@FindBy(css = "#draggableaccept")
	private WebElement m_DdragableAndDropableView;
	
	@FindBy(css = "#droppableaccept")
	private WebElement m_acceptTarget;
	
	@FindBy(css = "#droppableaccept > p")
	private WebElement m_acceptTargetOutput;
	
	public String clickAcceptBtn(Actions mouseLst)
	{
		mouseLst.click(m_AcceptBtn);
		return "Accept tab selected";
	}
	
	public String clickAndHolAcceptDragableAndDroppableView(Actions mouseLst)
	{
		mouseLst.clickAndHold(m_DdragableAndDropableView).perform();
		return "Ddragable And Dropable View held";
	}
	public String clickAndHolAcceptDragableNotDroppableView(Actions mouseLst)
	{
		mouseLst.clickAndHold(m_DragableNotDropableView).perform();
		return "Dragable Not, Dropable View held";
	}
	
	public String dragToAcceptTarget(Actions mouseLst)
	{
		mouseLst.moveToElement(m_acceptTargetOutput).perform();
		return "Mouse draaged to accept target";
	}
	
	public String getAcceptTargetText()
	{
		return m_acceptTargetOutput.getText().toString();
	}
	
}
